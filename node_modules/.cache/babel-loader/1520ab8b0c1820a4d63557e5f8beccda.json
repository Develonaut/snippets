{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmchenry/Code/snippets/src/features/Editor/EditorWorkspace/component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEditorSettingsContext, useSelectedItem } from \"core/providers\";\nimport { StyledCodeEditor } from \"./styles\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditorWorkspace = ({\n  onCursorChange\n}) => {\n  _s();\n\n  const {\n    fontSize,\n    theme,\n    language,\n    setLanguage\n  } = useEditorSettingsContext();\n  const [selectedItem, setSelectedItem] = useSelectedItem();\n  useEffect(() => {\n    setLanguage(selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.language); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItem]);\n\n  const handleOnChange = value => setSelectedItem({\n    value\n  });\n\n  return /*#__PURE__*/_jsxDEV(StyledCodeEditor, {\n    value: (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.value) || \"\",\n    theme: theme,\n    mode: language,\n    focus: true,\n    fontSize: fontSize,\n    onCursorChange: onCursorChange,\n    height: \"100%\",\n    width: \"100%\",\n    onChange: handleOnChange,\n    enableBasicAutocompletion: true,\n    enableLiveAutocompletion: true,\n    enableSnippets: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditorWorkspace, \"uq5C7Vm8FJDP/4D5GDrhfn0yWPs=\", false, function () {\n  return [useEditorSettingsContext, useSelectedItem];\n});\n\n_c = EditorWorkspace;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorWorkspace\");","map":{"version":3,"sources":["/Users/ryanmchenry/Code/snippets/src/features/Editor/EditorWorkspace/component.jsx"],"names":["React","useEditorSettingsContext","useSelectedItem","StyledCodeEditor","useEffect","EditorWorkspace","onCursorChange","fontSize","theme","language","setLanguage","selectedItem","setSelectedItem","handleOnChange","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,EAAmCC,eAAnC,QAA0D,gBAA1D;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAwB;AAAA;;AACrD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,MAA6CT,wBAAwB,EAA3E;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCV,eAAe,EAAvD;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW,CAACC,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAEF,QAAf,CAAX,CADc,CAEd;AACD,GAHQ,EAGN,CAACE,YAAD,CAHM,CAAT;;AAKA,QAAME,cAAc,GAAIC,KAAD,IAAWF,eAAe,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAAjD;;AAEA,sBACE,QAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CAAAH,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEG,KAAd,KAAuB,EADhC;AAEE,IAAA,KAAK,EAAEN,KAFT;AAGE,IAAA,IAAI,EAAEC,QAHR;AAIE,IAAA,KAAK,MAJP;AAKE,IAAA,QAAQ,EAAEF,QALZ;AAME,IAAA,cAAc,EAAED,cANlB;AAOE,IAAA,MAAM,EAAC,MAPT;AAQE,IAAA,KAAK,EAAC,MARR;AASE,IAAA,QAAQ,EAAEO,cATZ;AAUE,IAAA,yBAAyB,MAV3B;AAWE,IAAA,wBAAwB,MAX1B;AAYE,IAAA,cAAc;AAZhB;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA3BM;;GAAMR,e;UACwCJ,wB,EACXC,e;;;KAF7BG,e","sourcesContent":["import React from \"react\";\nimport { useEditorSettingsContext, useSelectedItem } from \"core/providers\";\nimport { StyledCodeEditor } from \"./styles\";\nimport { useEffect } from \"react\";\n\nexport const EditorWorkspace = ({ onCursorChange }) => {\n  const { fontSize, theme, language, setLanguage } = useEditorSettingsContext();\n  const [selectedItem, setSelectedItem] = useSelectedItem();\n\n  useEffect(() => {\n    setLanguage(selectedItem?.language);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedItem]);\n\n  const handleOnChange = (value) => setSelectedItem({ value });\n\n  return (\n    <StyledCodeEditor\n      value={selectedItem?.value || \"\"}\n      theme={theme}\n      mode={language}\n      focus\n      fontSize={fontSize}\n      onCursorChange={onCursorChange}\n      height=\"100%\"\n      width=\"100%\"\n      onChange={handleOnChange}\n      enableBasicAutocompletion\n      enableLiveAutocompletion\n      enableSnippets\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}