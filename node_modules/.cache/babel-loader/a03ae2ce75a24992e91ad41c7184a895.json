{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmchenry/Code/snippets/src/features/Editor/EditorHeader/component.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Header, DropButton, TextInput } from \"grommet\";\nimport { Clipboard } from \"grommet-icons\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { useSelectedItem } from \"core/providers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditorHeader = () => {\n  _s();\n\n  const [selectedItem, setSelectedItem] = useSelectedItem();\n  return /*#__PURE__*/_jsxDEV(Header, {\n    background: \"background\",\n    pad: \"xxsmall\",\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      plain: true,\n      value: (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.name) || \"\",\n      onChange: event => setSelectedItem({\n        name: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n      text: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.value,\n      children: /*#__PURE__*/_jsxDEV(DropButton, {\n        dropAlign: {\n          top: \"bottom\",\n          left: \"left\",\n          right: \"right\"\n        },\n        label: /*#__PURE__*/_jsxDEV(Clipboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 18\n        }, this),\n        dropContent: /*#__PURE__*/_jsxDEV(\"div\", {\n          pad: \"large\",\n          background: \"light-2\",\n          children: \"Copied!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditorHeader, \"5R5bVvQtXlZtS/JkziBXfm0hS0g=\", false, function () {\n  return [useSelectedItem];\n});\n\n_c = EditorHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorHeader\");","map":{"version":3,"sources":["/Users/ryanmchenry/Code/snippets/src/features/Editor/EditorHeader/component.jsx"],"names":["React","Header","DropButton","TextInput","Clipboard","CopyToClipboard","useSelectedItem","EditorHeader","selectedItem","setSelectedItem","name","event","target","value","top","left","right"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,SAA7B,QAA8C,SAA9C;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,SAASC,eAAT,QAAgC,gBAAhC;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,eAAe,EAAvD;AAEA,sBACE,QAAC,MAAD;AAAQ,IAAA,UAAU,EAAC,YAAnB;AAAgC,IAAA,GAAG,EAAC,SAApC;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,KAAK,EAAE,CAAAE,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEE,IAAd,KAAsB,EAF/B;AAGE,MAAA,QAAQ,EAAGC,KAAD,IAAWF,eAAe,CAAC;AAAEC,QAAAA,IAAI,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAArB,OAAD;AAHtC;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEL,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEK,KAArC;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,SAAS,EAAE;AAAEC,UAAAA,GAAG,EAAE,QAAP;AAAiBC,UAAAA,IAAI,EAAE,MAAvB;AAA+BC,UAAAA,KAAK,EAAE;AAAtC,SADb;AAEE,QAAA,KAAK,eAAE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAFT;AAGE,QAAA,WAAW,eACT;AAAK,UAAA,GAAG,EAAC,OAAT;AAAiB,UAAA,UAAU,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAvBM;;GAAMT,Y;UAC6BD,e;;;KAD7BC,Y","sourcesContent":["import React from \"react\";\nimport { Header, DropButton, TextInput } from \"grommet\";\nimport { Clipboard } from \"grommet-icons\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { useSelectedItem } from \"core/providers\";\n\nexport const EditorHeader = () => {\n  const [selectedItem, setSelectedItem] = useSelectedItem();\n\n  return (\n    <Header background=\"background\" pad=\"xxsmall\">\n      <TextInput\n        plain\n        value={selectedItem?.name || \"\"}\n        onChange={(event) => setSelectedItem({ name: event.target.value })}\n      />\n      <CopyToClipboard text={selectedItem?.value}>\n        <DropButton\n          dropAlign={{ top: \"bottom\", left: \"left\", right: \"right\" }}\n          label={<Clipboard />}\n          dropContent={\n            <div pad=\"large\" background=\"light-2\">\n              Copied!\n            </div>\n          }\n        />\n      </CopyToClipboard>\n    </Header>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}